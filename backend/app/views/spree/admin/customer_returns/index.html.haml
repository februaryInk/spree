= render partial: 'spree/admin/shared/order_tabs', locals: { current: :customer_returns }
- content_for :page_actions do
  - if @order.shipments.any?(&:shipped?) && can?(:create, Spree::CustomerReturn)
    = button_link_to Spree.t(:new_customer_return), spree.new_admin_order_customer_return_path(@order), icon: 'add', class: 'btn-success'
- content_for :page_title do
  \/ #{plural_resource_name(Spree::CustomerReturn)}
- if @order.shipments.any?(&:shipped?)
  - if @customer_returns.any?
    %table.table
      %thead{"data-hook" => "customer_return_header"}
        %tr
          %th= Spree.t(:return_number)
          %th= Spree.t(:pre_tax_total)
          %th= "#{Spree.t('date')}/#{Spree.t('time')}"
          %th= Spree.t(:reimbursement_status)
          %th
      %tbody
        - @customer_returns.each do |customer_return|
          %tr{"data-hook" => "customer_return_row", :id => "#{spree_dom_id(customer_return)}"}
            %td= link_to customer_return.number, edit_admin_order_customer_return_path(@order, customer_return)
            %td= customer_return.display_pre_tax_total.to_html
            %td= pretty_time(customer_return.created_at)
            %td
              - if customer_return.fully_reimbursed?
                %span.label.label-success= Spree.t(:reimbursed)
              - else
                %span.label.label-info= Spree.t(:incomplete)
            %td.actions.actions-1{"data-hook" => "admin_orders_customer_returns_index_row_actions"}
              = link_to_edit_url(edit_admin_order_customer_return_path(@order, customer_return), title: "admin_edit_#{dom_id(customer_return)}", no_text: true) if can?(:edit, customer_return)
  - else
    .alert.alert-info.no-objects-found
      = Spree.t(:no_resource_found, resource: plural_resource_name(Spree::CustomerReturn))
      ,
      \#{link_to(Spree.t(:add_one), spree.new_admin_order_customer_return_path(@order)) if can?(:create, Spree::CustomerReturn)}!
- else
  .alert.alert-info.no-objects-found{"data-hook" => "customer_return_cannot_create"}
    = Spree.t(:cannot_create_customer_returns)
