= render partial: 'spree/admin/shared/order_tabs', locals: { current: :customer_returns }
- content_for :page_title do
  \/ #{Spree.t(:customer_return)} ##{@customer_return.number}
- if @manual_intervention_return_items.any?
  %fieldset{"data-hook" => "manual_intervention_return_items"}
    %legend= Spree.t(:manual_intervention_required)
    = render partial: 'return_item_decision', locals: {return_items: @manual_intervention_return_items, show_decision: true}
- if @pending_return_items.any?
  %fieldset{"data-hook" => "accepted_return_items"}
    %legend= Spree.t(:pending)
    = render partial: 'return_item_decision', locals: {return_items: @pending_return_items, show_decision: true}
- if @accepted_return_items.any?
  %fieldset{"data-hook" => "accepted_return_items"}
    %legend= Spree.t(:accepted)
    = render partial: 'return_item_decision', locals: {return_items: @accepted_return_items, show_decision: false}
- if @rejected_return_items.any?
  %fieldset{"data-hook" => "rejected_return_items"}
    %legend= Spree.t(:rejected)
    = render partial: 'return_item_decision', locals: {return_items: @rejected_return_items, show_decision: false}
%fieldset{"data-hook" => "reimbursements"}
  %legend= plural_resource_name(Spree::Reimbursement)
  - if @customer_return.reimbursements.any?
    = render partial: 'reimbursements_table', locals: {reimbursements: @customer_return.reimbursements}
  - else
    .alert.alert-info.no-objects-found
      = Spree.t(:no_resource_found, resource: plural_resource_name(Spree::Reimbursement))
- if !@customer_return.fully_reimbursed? && @pending_reimbursements.empty? && can?(:create, Spree::Reimbursement)
  %fieldset.marginb{"data-hook" => "reimbursements"}
    - if @customer_return.completely_decided?
      = form_for [:admin, @order, Spree::Reimbursement.new] do |f|
        = hidden_field_tag :build_from_customer_return_id, @customer_return.id
        = f.button class: 'btn btn-primary' do
          = Spree.t(:create_reimbursement)
    - else
      .alert.alert-info.no-objects-found
        = Spree.t(:unable_to_create_reimbursements)
