- content_for :page_title do
  = Spree.t(:customer_returns)
- content_for :table_filter do
  %div{"data-hook" => "admin_return_authorisations_index_filters"}
    = search_form_for [:admin, @search], url: spree.admin_customer_returns_path do |f|
      .row
        .col-md-12
          .form-group
            = f.label :number_cont, Spree.t(:number)
            = f.text_field :number_cont, class: "form-control js-quick-search-target"
      .form-actions{"data-hook" => "admin_return_authorisations_index_filters_buttons"}
        = button Spree.t(:search), 'search'
= render partial: 'spree/admin/shared/index_table_options', locals: { collection: @collection, per_page_action: :customer_returns }
- if @collection.any?
  %table.table
    %thead
      %tr{"data-hook" => "rate_header"}
        %th= Spree.t(:created_at)
        %th= Spree.t(:number)
        %th= Spree.t(:order)
        %th= Spree.t(:reimbursement_status)
        %th= Spree.t(:pre_tax_total)
        %th
    %tbody
      - @collection.each do |customer_return|
        %tr{"data-hook" => "customer_return_row", :id => "#{spree_dom_id customer_return}"}
          %td= customer_return.created_at.to_date
          %td= link_to customer_return.number, spree.edit_admin_order_customer_return_path(customer_return.order, customer_return)
          %td= link_to customer_return.order.number, spree.edit_admin_order_path(customer_return.order)
          %td
            - if customer_return.fully_reimbursed?
              %span.label.label-success= Spree.t(:reimbursed)
            - else
              %span.label.label-info= Spree.t(:incomplete)
          %td= customer_return.display_pre_tax_total.to_html
          %td.actions.actions-1.text-right
            = link_to_edit_url spree.edit_admin_order_customer_return_path(customer_return.order, customer_return), no_text: true
- else
  .alert.alert-info.no-objects-found
    = Spree.t(:no_resource_found, resource: plural_resource_name(Spree::CustomerReturn))
    \.
= render partial: 'spree/admin/shared/index_table_options', locals: { collection: @collection, per_page_action: :customer_returns }
